package com.example.jdbctemplatedemo.entity;

import lombok.SneakyThrows;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.support.AbstractLobCreatingPreparedStatementCallback;
import org.springframework.jdbc.support.lob.DefaultLobHandler;
import org.springframework.jdbc.support.lob.LobCreator;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.util.FileCopyUtils;
import org.springframework.util.ResourceUtils;

import javax.annotation.Resource;
import java.io.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * @author Jeanne 2023/7/8
 **/
@Slf4j
@SpringBootTest()
@ActiveProfiles({"dev"})
class DemoLobDemoTest {
    @Resource
    JdbcTemplate jdbcTemplate;
    @Resource
    DefaultLobHandler defaultLobHandler;

    @Test
    @SneakyThrows
    public void testInsertBlob() {
        final File blobIn = ResourceUtils.getFile("classpath:images/screenshot.png") ;//new File("spring2004.jpg");
        final InputStream blobIs = new FileInputStream(blobIn);
        final File clobIn = ResourceUtils.getFile("classpath:images/large.txt") ;
        final InputStream clobIs = new FileInputStream(clobIn);
        final InputStreamReader clobReader = new InputStreamReader(clobIs);
        jdbcTemplate.execute(
                "INSERT INTO low_code_demo.lob_demo ( blob_demo, long_blob_demo,long_text_demo) VALUES (?, ?, ?)",
                new AbstractLobCreatingPreparedStatementCallback(defaultLobHandler) {

                    protected void setValues(PreparedStatement ps, LobCreator lobCreator) throws
                            SQLException {
                        ps.setLong(1, 1L);
                        lobCreator.setClobAsCharacterStream(ps, 2, clobReader, (int) clobIn.length
                                ());
                        lobCreator.setBlobAsBinaryStream(ps, 3, blobIs, (int) blobIn.length());
                    }
                }
        );
        blobIs.close();
        clobReader.close();
    }


}